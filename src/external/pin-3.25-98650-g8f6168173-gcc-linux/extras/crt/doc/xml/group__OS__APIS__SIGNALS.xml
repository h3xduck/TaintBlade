<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__OS__APIS__SIGNALS" kind="group">
    <compoundname>OS_APIS_SIGNALS</compoundname>
    <title>Signals</title>
    <innerclass refid="structSIGACTION" prot="public">SIGACTION</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__OS__APIS__SIGNALS_1gad30852456cca95699cbb8938281908a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void OS_SigSetEmpty</definition>
        <argsstring>(SIGSET_T *set)</argsstring>
        <name>OS_SigSetEmpty</name>
        <param>
          <type>SIGSET_T *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Represents a set of signals</para>
<para>Initialize the set to contain none of the signals.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>The Set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/os-apis/00-export-include/os-apis/signals-core.h" line="32" column="20" bodyfile="Source/os-apis/00-export-include/os-apis/signals-core.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="group__OS__APIS__SIGNALS_1gad356e9fc0009787d0f4fd75761b2312d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__OS__APIS__DEF_1ga8e6b2f5406a922a419991358caae6fc7" kindref="member">OS_RETURN_CODE</ref></type>
        <definition>OS_RETURN_CODE OS_SendSignalToProcess</definition>
        <argsstring>(NATIVE_PID pid, INT signal)</argsstring>
        <name>OS_SendSignalToProcess</name>
        <param>
          <type><ref refid="group__OS__APIS__TYPES_1gae6c37d3a178129452bbb6e591c13aeb0" kindref="member">NATIVE_PID</ref></type>
          <declname>pid</declname>
        </param>
        <param>
          <type>INT</type>
          <declname>signal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send signal to a process. This function is compatible with POSIX kill().</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The process to send signal to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">signal</parametername>
</parameternamelist>
<parameterdescription>
<para>The signal to send.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Operation status code.</para>
</simplesect>
<simplesect kind="par"><title>Availability:</title><para><bold>O/S</bold>: Linux &amp; macOS*<linebreak/>
 <bold>CPU:</bold> All<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/os-apis/00-export-include/os-apis/signals-core.h" line="168" column="16" declfile="Source/os-apis/00-export-include/os-apis/signals-core.h" declline="168" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__OS__APIS__SIGNALS_1gaca478df2d2cad5e9e192a0a6afd3f157" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__OS__APIS__DEF_1ga8e6b2f5406a922a419991358caae6fc7" kindref="member">OS_RETURN_CODE</ref></type>
        <definition>OS_RETURN_CODE OS_SigProcMask</definition>
        <argsstring>(INT how, const SIGSET_T *set, SIGSET_T *oldset)</argsstring>
        <name>OS_SigProcMask</name>
        <param>
          <type>INT</type>
          <declname>how</declname>
        </param>
        <param>
          <type>const SIGSET_T *</type>
          <declname>set</declname>
        </param>
        <param>
          <type>SIGSET_T *</type>
          <declname>oldset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the signal mask, the set of currently blocked signals for the current thread. This function is compatible with POSIX sigprocmask().</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">how</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies how to alter the blocked signals mask: SIG_BLOCK: The set of blocked signals is the union of the current set and the set argument. SIG_UNBLOCK: The signals in set are removed from the current set of blocked signals. It is legal to attempt to unblock a signal which is not blocked. SIG_SETMASK: The set of blocked signals is set to the argument set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>The signal set to alter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">oldset</parametername>
</parameternamelist>
<parameterdescription>
<para>The previous blocked signals set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Operation status code.</para>
</simplesect>
<simplesect kind="par"><title>Availability:</title><para><bold>O/S</bold>: Linux &amp; macOS*<linebreak/>
 <bold>CPU:</bold> All<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/os-apis/00-export-include/os-apis/signals-core.h" line="188" column="16" declfile="Source/os-apis/00-export-include/os-apis/signals-core.h" declline="188" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__OS__APIS__SIGNALS_1ga8736511da8873f1e09877056989c1b63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__OS__APIS__DEF_1ga8e6b2f5406a922a419991358caae6fc7" kindref="member">OS_RETURN_CODE</ref></type>
        <definition>OS_RETURN_CODE OS_SigAction</definition>
        <argsstring>(INT signum, const struct SIGACTION *act, struct SIGACTION *oldact)</argsstring>
        <name>OS_SigAction</name>
        <param>
          <type>INT</type>
          <declname>signum</declname>
        </param>
        <param>
          <type>const struct <ref refid="structSIGACTION" kindref="compound">SIGACTION</ref> *</type>
          <declname>act</declname>
        </param>
        <param>
          <type>struct <ref refid="structSIGACTION" kindref="compound">SIGACTION</ref> *</type>
          <declname>oldact</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the action taken by a process on receipt of a specific signal. This function is compatible with POSIX sigaction().</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">signum</parametername>
</parameternamelist>
<parameterdescription>
<para>The signal to alter its behavior. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act</parametername>
</parameternamelist>
<parameterdescription>
<para>The action to be taken upon signal reception. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">oldact</parametername>
</parameternamelist>
<parameterdescription>
<para>The previous action that was taken upon signal reception.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Operation status code.</para>
</simplesect>
<simplesect kind="par"><title>Availability:</title><para><bold>O/S</bold>: Linux &amp; macOS*<linebreak/>
 <bold>CPU:</bold> All<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/os-apis/00-export-include/os-apis/signals.h" line="100" column="16" declfile="Source/os-apis/00-export-include/os-apis/signals.h" declline="100" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__OS__APIS__SIGNALS_1gab760657fa1a70edbfacba128ccbe1d92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__OS__APIS__DEF_1ga8e6b2f5406a922a419991358caae6fc7" kindref="member">OS_RETURN_CODE</ref></type>
        <definition>OS_RETURN_CODE OS_SigSuspend</definition>
        <argsstring>(const SIGSET_T *mask)</argsstring>
        <name>OS_SigSuspend</name>
        <param>
          <type>const SIGSET_T *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Temporarily replaces the signal mask of the calling process with the mask given by mask and then suspends the process until delivery of a signal whose action is to invoke a signal handler or to terminate a process.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>The mask to use for the signals</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Operation status code.</para>
</simplesect>
<simplesect kind="par"><title>Availability:</title><para><bold>O/S</bold>: Linux &amp; macOS*<linebreak/>
 <bold>CPU:</bold> All<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/os-apis/00-export-include/os-apis/signals.h" line="115" column="16" declfile="Source/os-apis/00-export-include/os-apis/signals.h" declline="115" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__OS__APIS__SIGNALS_1ga4175fcbfa7821e8d22000e21d03a94e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__OS__APIS__DEF_1ga8e6b2f5406a922a419991358caae6fc7" kindref="member">OS_RETURN_CODE</ref></type>
        <definition>OS_RETURN_CODE OS_SigPending</definition>
        <argsstring>(const SIGSET_T *set)</argsstring>
        <name>OS_SigPending</name>
        <param>
          <type>const SIGSET_T *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the set of signals that are pending for delivery to the calling thread (i.e., the signals which have been raised while blocked). The mask of pending signals is returned in set.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">set</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to store the signal set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Operation status code.</para>
</simplesect>
<simplesect kind="par"><title>Availability:</title><para><bold>O/S</bold>: Linux &amp; macOS*<linebreak/>
 <bold>CPU:</bold> All<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/os-apis/00-export-include/os-apis/signals.h" line="130" column="16" declfile="Source/os-apis/00-export-include/os-apis/signals.h" declline="130" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__OS__APIS__SIGNALS_1gaee16d740855d85b292290106194131e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__OS__APIS__DEF_1ga8e6b2f5406a922a419991358caae6fc7" kindref="member">OS_RETURN_CODE</ref></type>
        <definition>OS_RETURN_CODE OS_SendSignalToThread</definition>
        <argsstring>(NATIVE_PID pid, NATIVE_TID tid, UINT32 signal)</argsstring>
        <name>OS_SendSignalToThread</name>
        <param>
          <type><ref refid="group__OS__APIS__TYPES_1gae6c37d3a178129452bbb6e591c13aeb0" kindref="member">NATIVE_PID</ref></type>
          <declname>pid</declname>
        </param>
        <param>
          <type><ref refid="group__OS__APIS__TYPES_1ga20167a3cedec6512ccdc030b50ee780b" kindref="member">NATIVE_TID</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>UINT32</type>
          <declname>signal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send signal to a particular thread inside a process.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The process ID where the thread is running.if it&apos;s INVALID_NATIVE_PID then we ignore the pid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tid</parametername>
</parameternamelist>
<parameterdescription>
<para>The thread ID to send the signal to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">signal</parametername>
</parameternamelist>
<parameterdescription>
<para>The signal to send.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Operation status code.</para>
</simplesect>
<simplesect kind="par"><title>Availability:</title><para><bold>O/S</bold>: Linux &amp; macOS*<linebreak/>
 <bold>CPU:</bold> All<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/os-apis/00-export-include/os-apis/signals.h" line="146" column="16" declfile="Source/os-apis/00-export-include/os-apis/signals.h" declline="146" declcolumn="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains signals related os apis. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
