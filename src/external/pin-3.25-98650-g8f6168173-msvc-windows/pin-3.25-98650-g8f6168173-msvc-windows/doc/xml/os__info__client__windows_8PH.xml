<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="os__info__client__windows_8PH" kind="file" language="C++">
    <compoundname>os_info_client_windows.PH</compoundname>
      <sectiondef kind="define">
      <memberdef kind="define" id="os__info__client__windows_8PH_1ab90b555037f75bff7e054fcd8b7e188b" prot="public" static="no">
        <name>PIN_G_OS_INFO_CLIENT_WINDOWS_PH</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/pin/pin_w/os_info_client_windows.PH" line="9" column="10" bodyfile="Source/pin/pin_w/os_info_client_windows.PH" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="os__info__client__windows_8PH_1a0b303558c0f14509b09573c3fd0ea1f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UINT32</type>
        <definition>UINT32 PIN_GetWindowsSyscallFromKey</definition>
        <argsstring>(SYSCALL_KEY key)</argsstring>
        <name>PIN_GetWindowsSyscallFromKey</name>
        <param>
          <type>SYSCALL_KEY</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Client side interface to pin vm for specifically Windows only functions. At present none of these is documented, they are provided for the use of PinPlay.</para><para>Get the system call number which corresponds to the equivalent system call key. This mapping depends on the precise version of the operating system on which Pin is running.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>system call key </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>system call number</para></simplesect>
<simplesect kind="par"><title>Availability:</title><para><bold>Mode:</bold> JIT<linebreak/>
<bold>O/S</bold>: Windows<linebreak/>
<bold>CPU:</bold> IA-32 and Intel(R) 64 architectures<linebreak/>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/pin/pin_w/os_info_client_windows.PH" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="os__info__client__windows_8PH_1ad6776926660197f1315cebfd967700b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SYSCALL_KEY</type>
        <definition>SYSCALL_KEY PIN_GetKeyFromWindowsSyscall</definition>
        <argsstring>(UINT32 syscallNo)</argsstring>
        <name>PIN_GetKeyFromWindowsSyscall</name>
        <param>
          <type>UINT32</type>
          <declname>syscallNo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the system call key which corresponds to the equivalent system call number. Pin only knows about a limited set of system calls, if the system call number is unknown, this function will return SYSCALL_KEY_UNKNOWN.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">systcallNo</parametername>
</parameternamelist>
<parameterdescription>
<para>system call number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>system call key, or SYSCALL_KEY_UNKNOWN</para></simplesect>
<simplesect kind="par"><title>Availability:</title><para><bold>Mode:</bold> JIT<linebreak/>
<bold>O/S</bold>: Windows<linebreak/>
<bold>CPU:</bold> IA-32 and Intel(R) 64 architectures<linebreak/>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/pin/pin_w/os_info_client_windows.PH" line="43" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2020-2021<sp/>Intel<sp/>Corporation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>MIT</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PIN_G_OS_INFO_CLIENT_WINDOWS_PH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>duplicate<sp/>inclusion<sp/>of<sp/>os_info_client_windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_G_OS_INFO_CLIENT_WINDOWS_PH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>UINT32<sp/>PIN_GetWindowsSyscallFromKey(SYSCALL_KEY<sp/>key);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>SYSCALL_KEY<sp/>PIN_GetKeyFromWindowsSyscall(UINT32<sp/>syscallNo);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PIN_G_OS_INFO_CLIENT_WINDOWS_PH</highlight></codeline>
    </programlisting>
    <location file="Source/pin/pin_w/os_info_client_windows.PH"/>
  </compounddef>
</doxygen>
